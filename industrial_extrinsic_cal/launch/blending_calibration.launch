<?xml version="1.0" ?>
<launch>


  <!-- Basler camera node   -->
  <node pkg="aravis_camera_driver" type="aravis_camera_node" name="aravis_camera_node">
    <param name="camera_id" value="Basler-21135423"/>
    <param name="pixel_format" value="bayer_bggr8"/>
    <param name="exposure_mode" value="auto_once"/>
    <param name="exposure_time" value="1000"/>
    <param name="auto_white_balance_once" value="true"/>
    <param name="gain_mode" value="auto_once"/>
    <param name="gain" value="0"/>
    <param name="digital_shift" value="0"/>
    <param name="mtu" value="1500"/>
    <param name="bin_x" value="1"/>
    <param name="bin_y" value="1"/>
    <param name="roi_x" value="0"/>
    <param name="roi_y" value="0"/>
    <param name="roi_width" value="1624"/>
    <param name="roi_height" value="1234"/>
    <param name="frame_rate" value="30"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="image_proc_nodelet"  args="manager"/>
  <node pkg="nodelet" type="nodelet" name="debayer" args="load image_proc/debayer image_proc_nodelet">
    <remap from="image_raw" to="image"/>
  </node>

  <!-- Kinect Camera Launch -->

  <!-- Launch kinect  -->
  <arg name="namespace1" value="WristAsus"/>
  <arg name="sensor_name1" value="$(arg namespace1)_WristAsus"/>

  <remap from="/$(arg sensor_name1)/depth/points"
	to="/$(arg namespace1)/camera/depth_registered/points"/>
  <include  file="$(find industrial_extrinsic_cal)/launch/single_sensor.launch">
	<arg name="arm_prefix" value="$(arg namespace1)_"/>
	<arg name="camera_name" value="$(arg sensor_name1)"/>
	<arg name="publish_tf" value="true" />
	<arg name="device_id" value="2@0" />
  </include> 

<!-- Launch service which when called will move robot and then indicate scene is ready   -->
  <node pkg="industrial_extrinsic_cal" type="ros_robot_trigger_action_service" name="rosRobotSceneTrigger" output="screen" />

<!-- Launch the extrinsic calibration service -->
  <node pkg="industrial_extrinsic_cal" type="service_node" name="calibration_service_node" output="screen" >
    <rosparam>
      camera_file: "godel_camera_def.yaml"
      target_file: "circlegrid5x7n7x5.yaml"
      cal_job_file: "godel_caljob.yaml"
      store_results_package_name: "industrial_extrinsic_cal"
      store_results_file_name: "world_to_basler_tf_broadcaster.launch"
    </rosparam>
  </node>

</launch>
